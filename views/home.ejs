<!DOCTYPE html>
<html lang="en">
    <div class="loader"></div>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="style.css">
    <link href="https://fonts.cdnfonts.com/css/there-brat" rel="stylesheet">
    <title>Placemento</title>
</head>

<div style="position: relative;right:50%;">
    <%- include("partials/header/header.ejs" );%>
    </div>
</div>
<body>



<h1 class="ml13" style="position: relative; left: 10px;">Placemento</h1>
<script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/2.0.2/anime.min.js"></script>

    
    


<div class="grid-container">
 <%k=0%>
 <% types.forEach(function(type){%>
    <div class="card" style="background-image:url(<%=images[k]%>);">
       <div class="card-content">
        <h2 class="card-title"><%=type%></h2>
        <p class="card-body">Laudantium corrupti sequi, excepturi doloremque soluta illo, perferendis libero veniam dolore suscipit at reiciendis distinctio quidem unde in ratione sed error quod?</p>
        <a href="/companies/<%=type%>" class="button">Learn More</a>
       </div>
    </div>
<%k++%>
<%})%>
</div>

</body>

<style>

    :root {
    --clr-neutral-900: hsl(207, 19%, 9%);
    --clr-neutral-100: hsl(0, 0%, 100%);
    --clr-accent-400: hsl(142, 90%, 60%);
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    display: grid;
    min-height: 100vh;
    place-items: center;
    line-height: 1.6;
    background: var(--clr-neutral-900);
    font-family: sans-serif;
}

.loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #333333;
  transition: opacity 0.75s, visibility 0.75s;
}

.loader--hidden {
  opacity: 0;
  visibility: hidden;
}

.loader::after {
  content: "";
  width: 75px;
  height: 75px;
  border: 15px solid #dddddd;
  border-top-color: #009578;
  border-radius: 50%;
  animation: loading 0.75s ease infinite;
}

@keyframes loading {
  from {
    transform: rotate(0turn);
  }
  to {
    transform: rotate(1turn);
  }
}


h1{
   margin-top: 10px;
}
body::-webkit-scrollbar{
    width: 2px;
}

body::-webkit-scrollbar-track {
background: #1e1e24;
}

body::-webkit-scrollbar-thumb{
background: var(--clr-accent-400)
}

.card {
    color: var(--clr-neutral-100);
    background-size: cover;
    background-position: center;
    padding: 10rem 0 0;
    max-width: 35ch;
    border-radius: 0.5em;
    overflow: hidden;
    display: flex;
    transition: transform 500ms ease;
}

.card:hover{
    transform: scale(1.05);
}

.card-content {
    --padding: 1.5rem;
    padding: var(--padding);
    background: linear-gradient(hsl(0 0% 0% / 0),
              hsl(20 0% 0% / 0.5) 20%);
        
            transform: translateY(65%);
            transition: transform 500ms ease;
            }
            .card-content> *:not(.card-title) {
            opacity: 0;
            transition: opacity 500ms linear;
            }
            .card:hover .card-content{
            transform: translateY(0);
            transition-delay: 500ms;
            }
            .card:hover .card-content > * {
            opacity: 1;
            transition-delay: 1000ms;
            }

.card-title {
    position: relative;
    width: max-content;
}

.card-title::after {
    content: "";
    position: absolute;
    height: 4px;
    left: calc(var(--padding) * -1);
    bottom: 0;
    width: calc(100% + var(--padding));
    background: var(--clr-accent-400);
    transform-origin: left;
    transform: scaleX(0);
    transition: transform 500ms ease;
    
}
.card:hover .card-title::after{
    transform: scaleX(1);
}
.button {
    cursor: pointer;
    display: inline-block;
    text-decoration: none;
    color: var(--clr-neutral-900);
    background-color: var(--clr-accent-400);
    padding: 0.5em 1.25em;
    border-radius: 0.25rem;
}
.button:hover,
.button:focus{
    background-color: var(--clr-neutral-100);
}
.grid-container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr;
    grid-gap: 20px;
    margin-left: 5 rem;
}

.ml13 {
  font-size: 3em;
  text-transform: uppercase;
  letter-spacing: 0.5em;
  font-weight: 600;
  color: white;
}

.ml13 .letter {
  display: inline-block;
  line-height: 1em;
}

 @media only screen and (max-width: 1600px) {
  .grid-container {
    grid-template-columns: 1fr 1fr 1fr;
  }
  }
  @media only screen and (max-width: 1100px) {
  .grid-container {
    grid-template-columns: 1fr 1fr;
  }
  }
@media only screen and (max-width: 600px) {
  .grid-container {
    grid-template-columns: 1fr;
  }
  .ml13{
    font-size: 1em;
  }
} 
</style>

<script>
    // Wrap every letter in a span
  var textWrapper = document.querySelector('.ml13');
textWrapper.innerHTML = textWrapper.textContent.replace(/\S/g, "<span class='letter'>$&</span>");

anime.timeline({loop: false})
  .add({
    targets: '.ml13 .letter',
    translateY: [100,0],
    translateZ: 0,
    opacity: [0,1],
    easing: "easeOutExpo",
    duration: 1400,
    delay: (el, i) => 300 + 30 * i
  }).add({
    targets: '.ml13 .letter',
    // translateY: [0,-100],
    // opacity: [1,0],

    duration: 1200,
    delay: (el, i) => 100 + 30 * i
  });
  window.addEventListener("load", () => {
  const loader = document.querySelector(".loader");

  loader.classList.add("loader--hidden");

  loader.addEventListener("transitionend", () => {
    document.body.removeChild(loader);
  });
});
</script>

</html>